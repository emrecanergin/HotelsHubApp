services:
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: Logs
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-express:
    image: mongo-express:latest
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - '1434:1433'
    environment:
      SA_PASSWORD: ${SQL_SERVER_PASSWORD:-YourPassword123!}
      ACCEPT_EULA: 'Y'
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourPassword123! -C -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3

  webapi:
    build: 
      context: .
      dockerfile: HotelsHubApp.WebAPI/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Hotelbeds__ApiKey=${HOTELBEDS_API_KEY}
      - Hotelbeds__SecretKey=${HOTELBEDS_SECRET_KEY}
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: HotelsHubApp.LoggingWorkerService/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped 